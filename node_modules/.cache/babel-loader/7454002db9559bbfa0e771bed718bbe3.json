{"ast":null,"code":"import _slicedToArray from \"/Users/Scott/Desktop/Networks/marvel-encyclopedia/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Scott/Desktop/Networks/marvel-encyclopedia/src/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport logo from './mdclogo.jpg';\nimport * as Styled from './styled';\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        click = _useState4[0],\n        setClick = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        data = _useState6[0],\n        setData = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        response = _useState8[0],\n        setResponse = _useState8[1];\n\n  useEffect(() => {\n    fetch(\"https://superheroapi.com/api.php/1711939795607990/search/\".concat(search)).then(response => setResponse(response.json())).then(data => setData(data)).catch(error => console.log(error));\n    console.log(click);\n    console.log(data);\n    console.log(response);\n  }, [click]); // function callAPI() {\n  // \tconsole.log(search);\n  // \tvar xhttp = new XMLHttpRequest();\n  // \txhttp.onreadystatechange = function() {\n  // \t\tif (this.readyState === 4 && this.status === 200) {\n  // \t\t\tdocument.getElementById(\"response\").innerHTML = this.responseText;\n  // \t\t}\n  // \t\tconsole.log(this.readyState);\n  // \t\tconsole.log(this.responseText);\n  // \t};\n  // \txhttp.open(\"GET\", \"https://superheroapi.com/api.php/1711939795607990/search/\" + search, true);\n  // \txhttp.setRequestHeader(\"access-control-allow-origin\", \"*\");\n  // \txhttp.setRequestHeader(\"access-control-allow-headers\", \"authorization, access-control-allow-origin\");\n  // \txhttp.send();\n  // }\n\n  console.log(data);\n  return React.createElement(Styled.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Styled.Logo, {\n    src: logo,\n    alt: \"Marvel logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Styled.Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Styled.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Search for someone in the Marvel or DC Universes: \"), React.createElement(Styled.Input, {\n    type: \"text\",\n    id: \"search\",\n    required: true,\n    placeholder: \"Iron Man\",\n    onChange: event => setSearch(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Styled.Button, {\n    onClick: () => setClick(click + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Search\")), data && React.createElement(Styled.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, Object.keys(data).map((f, o) => Object.keys(f).map((b, a) => Object.keys(b).map((m, i) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, f, o, \" \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, b, a, \" \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, m, i)))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Scott/Desktop/Networks/marvel-encyclopedia/src/App.jsx"],"names":["React","useState","useEffect","logo","Styled","App","search","setSearch","click","setClick","data","setData","response","setResponse","fetch","then","json","catch","error","console","log","event","target","value","Object","keys","map","f","o","b","a","m","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './mdclogo.jpg';\nimport * as Styled from './styled';\n\n\nfunction App() {\n\tconst [search, setSearch] = useState(\"\");\n\tconst [click, setClick] = useState(0);\n\tconst [data, setData] = useState();\n\tconst [response, setResponse] = useState();\n\n\tuseEffect(() => {\n\t\tfetch(\n\t\t\t`https://superheroapi.com/api.php/1711939795607990/search/${search}`,\n\t\t)\n\t\t.then(response => setResponse(response.json()))\n\t\t.then(data => setData(data))\n\t\t.catch(error => console.log(error));\n\t\tconsole.log(click);\n\t\tconsole.log(data);\n\t\tconsole.log(response);\n\t}, [click]);\n\n\t// function callAPI() {\n\t// \tconsole.log(search);\n\t// \tvar xhttp = new XMLHttpRequest();\n\t// \txhttp.onreadystatechange = function() {\n\t// \t\tif (this.readyState === 4 && this.status === 200) {\n\t// \t\t\tdocument.getElementById(\"response\").innerHTML = this.responseText;\n\t// \t\t}\n\t// \t\tconsole.log(this.readyState);\n\t// \t\tconsole.log(this.responseText);\n\t// \t};\n\t// \txhttp.open(\"GET\", \"https://superheroapi.com/api.php/1711939795607990/search/\" + search, true);\n\t// \txhttp.setRequestHeader(\"access-control-allow-origin\", \"*\");\n\t// \txhttp.setRequestHeader(\"access-control-allow-headers\", \"authorization, access-control-allow-origin\");\n\t// \txhttp.send();\n\t// }\n\tconsole.log(data);\n\treturn (\n\t\t<Styled.Header>\n\t\t\t<Styled.Logo src={logo} alt=\"Marvel logo\" />\n\t\t\t<Styled.Form >\n\t\t\t\t<Styled.Label>Search for someone in the Marvel or DC Universes: </Styled.Label>\n\t\t\t\t<Styled.Input type=\"text\" id=\"search\" required placeholder=\"Iron Man\" onChange={event => setSearch(event.target.value)} />\n\t\t\t\t<Styled.Button onClick={() => setClick(click+1)}>Search</Styled.Button>\n\t\t\t</Styled.Form>\n\t\t\t{data && <Styled.Label>\n\t\t\t\t{Object.keys(data).map((f, o) => (\n\t\t\t\t\tObject.keys(f).map((b, a) => (\n\t\t\t\t\t\tObject.keys(b).map((m, i) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span>{f}{o} </span>\n\t\t\t\t\t\t\t\t<span>{b}{a} </span>\n\t\t\t\t\t\t\t\t<span>{m}{i}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t))\n\t\t\t\t))}\n\t\t\t</Styled.Label>} \n\t\t</Styled.Header>\n\t);\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}